package hu.maz;

/**
 *
 * @author MAZ muezli w/e
 *
 * Crude but werks
 */
public class DayOne {

    public static void main(String[] args) {
        String a = "299171288753329525643213925696342571212445168199975692849386772396767793788221583235498328144125978176512441178517712574386745672541465594195284114637812411598"
                + "3757674741654345199457965517532239735525558793545618566933455988255493664212234752646696574627359632141931238699292258283697977142151835628553428582521279811315"
                + "9911272923448284681544657616654285632235958355867722479252256292311384799669645293812691169936746744856227797779513997329663235176153745581296191298956836998758"
                + "1942748653273839889924991154729257317872285926249118292219859259352687857578545691315387631334274348487674759891735796553751259724353593172377126676588287226238"
                + "3744875852839598163574692214495769523831895484579969714249197262694297678899742713579729764914984973918682718577578625455286637172948994388127281746612927191224"
                + "7236569141713377483469323737384967871876982476485658337183881519295728697121462266226452265259877781881868585356333494916519693683238733823362353424927852348119"
                + "4266732947984163146377996363444489417827741131429253159476648693413633542353895978932115327457899575918986922531577265764888117694613549385755272734743995453663"
                + "8951535365764473645818256524518165399619264485168726974449185667256388545787288336841563146969699475763628857581614692774717913318884114821282545385926964373619"
                + "9836818121559198563122442483528316837885842696283932779475955796132242682934853291737434482287486978566652161245555856779844813283979453489221189332412315117573"
                + "2595313528753844442644573731532638789993324441785771274338911642663877211163572782226657985848243369576484544266654959822211793827941583668948758647612666957731"
                + "5581382329168461161785325585777442218598792121961859681444622955693835441716497179529474189863169857898923124537682635917926678376793593278884514354229356986399"
                + "8773276365886375624694329228686284863341465994571635379257258559894197638117333711626435669415976255967412994139131385751822134927578932521461677534945328228131"
                + "973291962134523589491173343648964449149716696761218423314765168285342711137126239639867897341514131244859826663281981251614843274762372382114258543828157464392";

//Making an array out of the string        
        char[] b = new char[a.length()];
        b = a.toCharArray();
        int sum = 0;

//Looking for repeating digits, summing them        
        for (int i = 0; i < a.length() - 1; i++) {
            sum += ((Character.compare(b[i], b[i + 1])) == 0) ? DayOne.Recognise(b[i]) : 0;
        }

//Checking if the first and the last digit is the same        
        sum += ((Character.compare(b[0], b[a.length() - 1])) == 0) ? DayOne.Recognise(b[0]) : 0;
        System.out.println("The sum is: " + sum);

        int sumc = 0;
        int distance = a.length() / 2 ;
//Checking if the char matches the char at the given distance  
        for (int i = 0; i < a.length(); i++) {
            if ((distance + i) < a.length()) {
                sumc += ((Character.compare(b[i], b[i + distance])) == 0) ? DayOne.Recognise(b[i]) : 0;
            } else {
                //distance = distance-(a.length()-i);
                sumc += ((Character.compare(b[i], b[i-distance])) == 0) ? DayOne.Recognise(b[i]) : 0;
            }
        }

        System.out.println("The sum of distanced pairs: " + sumc);
    }

//Method to return the numeral value of the char    
    public static int Recognise(char a) {
        int z = 0;
        switch (a) {
            case '1':
                return 1;
            case '2':
                return 2;
            case '3':
                return 3;
            case '4':
                return 4;
            case '5':
                return 5;
            case '6':;
                return 6;
            case '7':
                return 7;
            case '8':
                return 8;
            case '9':;
                return 9;
            case '0':
                return 0;
        }
        return 1;
    }
}
